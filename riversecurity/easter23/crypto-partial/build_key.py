from Crypto.PublicKey import RSA
from base64 import b64encode, b64decode

# private key components
d = 3436145230856533452309797868646793336117758577784760984545060170305750428975063990533832051218746273204950323084128880607426027276344775346477666446399212632899175232068670572703715827997680613597476349699284204040559936731006471228800306187467714926499384152765587800465234125185938570733949665630400130880127083575560172505981891554839930095397689972191207229609096303183856046702263418926279952871253515155265288520605561036576246861853967636468810599650732121956901592957042464310534898835179076655010251749610371958137342333280828904824259397065806007083524506356467163093132622264605828769341863307490316681465768166184738453660759375049675060377537919756750436266843132121614033396551485007829550346430950739801546016675502589712973940164644161920606648762862667916454992539559146882758867624788098510743326202599157662352882959491475941560276290940522623017204484016880144258341562734965305668580636639256796138206857868769614490440480709828107615263898267699723887092930349010726814804183322812126502451690599117014277281701730455192708424162914928810251329433443701108841859186834320277063352419371672256505074277477839390696655903901128890017158441842542742808965610437372267562259980170448001660510912399096888196793793
p = 30274808497202971656141907056868362838189171459032932410536106864447250223842158268704150613233540611169251556847204310433803362666516559833088731294064109316152948669606751548704290530392762846915328909869080904888002139061884802768673620738371701462630449485092768861676472947218456343931664748674695790409112227702319595215655220845948937787906336618506422766649635652776090438479740001068751372664565370486548266497253390500915284487358373589460148950520786232090209572645433021398465198502261107647810348165358257511111693141436807713022391135705741516107735687778204782003131768784810134850278320878134979064209
q = 28069248799171537286741832203524935961384677622093752688176094868535581872471347295546917201430297135715941012688367369605542772941143919134115484179637196603176468641742775901979145694820845667069668301484500736369028941903080257493340871574929823331712146068905193311973876858584612010430940360705766716485499695940637150009868456633614893281491156349004997579152176354049016801206738405518027577644278717529463540429042346951058782970175779908177757137823273513871779092686241393576402117069252958310672521105717580946805886797565444625443266095122126632197109528664305242026449049817610515454679515194827566931933
iqmp = 8136680559511488592439728666193940447920612109849349869977129929709193870228755776224629515916369041148125827589776722628740065957186727475574895609175581824663824345304408040109999412929201474630584714246263916093142683402832835302260119215940895566498164036873767844060643240781924739908402886032976049508006449176913746409136585824717046585085448764087546814499660551473637153472872990938873919822611525056171586640238937254171484999968260446587136583641682135300665332706276848365821715405570479228331985042191234729110131001308959897741656151557240260901816325374391134293720704692179842684138434246939871297730

# calculate n, e and dmp1, dmq1
n = p*q
e = 65537 # default public exponent value
dmp1 = d % (p-1)
dmq1 = d % (q-1)

# create an RSA object and assign private key components
rsa = RSA.construct((n, e, d, p, q, dmp1, dmq1, iqmp))

# export the private key in PEM format
private_key = rsa.export_key()

# print the PEM format private key
print(private_key.decode())


RsaCtfTool.py -p 30274808497202971656141907056868362838189171459032932410536106864447250223842158268704150613233540611169251556847204310433803362666516559833088731294064109316152948669606751548704290530392762846915328909869080904888002139061884802768673620738371701462630449485092768861676472947218456343931664748674695790409112227702319595215655220845948937787906336618506422766649635652776090438479740001068751372664565370486548266497253390500915284487358373589460148950520786232090209572645433021398465198502261107647810348165358257511111693141436807713022391135705741516107735687778204782003131768784810134850278320878134979064209 -q